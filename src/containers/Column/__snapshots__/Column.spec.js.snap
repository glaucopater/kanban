// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Column renders properly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Column
    category_tasks={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "category": "",
      "children": Array [
        <header>
          <h3>
            
          </h3>
          <button
            className="add-button"
            onClick={[Function]}
          >
            +
          </button>
          <div
            className="counter"
          >
            (
            0
            )
          </div>
        </header>,
        <div
          className="task-container droppable"
        />,
      ],
      "className": "Column ",
      "droppable": "true",
      "onDragOver": [Function],
      "onDrop": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <h3>
              
            </h3>,
            <button
              className="add-button"
              onClick={[Function]}
            >
              +
            </button>,
            <div
              className="counter"
            >
              (
              0
              )
            </div>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "",
            },
            "ref": null,
            "rendered": "",
            "type": "h3",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "+",
              "className": "add-button",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": "+",
            "type": "button",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "(",
                0,
                ")",
              ],
              "className": "counter",
            },
            "ref": null,
            "rendered": Array [
              "(",
              0,
              ")",
            ],
            "type": "div",
          },
        ],
        "type": "header",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [],
          "className": "task-container droppable",
        },
        "ref": null,
        "rendered": Array [],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "category": "",
        "children": Array [
          <header>
            <h3>
              
            </h3>
            <button
              className="add-button"
              onClick={[Function]}
            >
              +
            </button>
            <div
              className="counter"
            >
              (
              0
              )
            </div>
          </header>,
          <div
            className="task-container droppable"
          />,
        ],
        "className": "Column ",
        "droppable": "true",
        "onDragOver": [Function],
        "onDrop": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h3>
                
              </h3>,
              <button
                className="add-button"
                onClick={[Function]}
              >
                +
              </button>,
              <div
                className="counter"
              >
                (
                0
                )
              </div>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "",
              },
              "ref": null,
              "rendered": "",
              "type": "h3",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "+",
                "className": "add-button",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "+",
              "type": "button",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "(",
                  0,
                  ")",
                ],
                "className": "counter",
              },
              "ref": null,
              "rendered": Array [
                "(",
                0,
                ")",
              ],
              "type": "div",
            },
          ],
          "type": "header",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [],
            "className": "task-container droppable",
          },
          "ref": null,
          "rendered": Array [],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    "disableLifecycleMethods": true,
  },
}
`;
